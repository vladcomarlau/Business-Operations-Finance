spring:
  application.name: backend

  security:
    user:
      name: "user"
      password: "password"
      roles:
        - "USER"
    oauth2:
      authorizationserver:
        issuer: http://localhost:8080   #adresa serverului pt authorization
        client:     #requesteri acceptati (client/frontend)
          login-client:
            registration:
              client-id: "login-client"
              client-secret: "{noop}openid-connect"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
              redirect-uris: #unde e callback de redirect in frontend/client
                - "http://127.0.0.1:8080/login/oauth2/code/login-client"
                - "http://127.0.0.1:8080/authorized"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true
          login-client-with-messaging:
            registration:
              client-id: "login-client-with-messaging"
              client-secret: "{noop}with-messages"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/login-client-with-messaging"
                - "http://127.0.0.1:8080/authorized"
              scopes:
                - "openid"
                - "profile"
                - "message:read"
                - "message:write"
            require-authorization-consent: true
          messaging-client:
            registration:
              client-id: "messaging-client"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "client_credentials" #util pt service-to-service (machine-to-machine)
              redirect-uris:
                - "http://127.0.0.1:8080/authorized"
              scopes:
                - "message:read"
                - "message:write"
            require-authorization-consent: true

app.allowed.origin: http://localhost:5173
server.servlet.context-path: /



